# @package _global_

# to execute this experiment run:
# python main.py +experiment=gaussian_mix_2d

defaults:
    - /nn@model.score.nn: mlp.yaml
    - override /datamodule: custom_datamodule.yaml

sample:
  nsamples : 100
  return_prob : True
  return_traj : True
  method : ode

seed: 42

device: cuda:0

trainer:
  max_epochs: 30

logger:
    mlflow:
      experiment_name: "GaussianMix"

datamodule:
  data_path : null
  test_data_path : null
  distribution:
    _target_: gen.simulations.gmm.GaussianMixture
    npoints : 1
    centers : [[2,2],[-2,-2]]
    std : [0.3,0.2]
  batch_size : 32


model:
  _target_: gen.diffusion.diffusion.DiffusionModel
  lr : 1e-4
  shape : [1,2]

  sde :
    _target_: gen.diffusion.sde.PiecewiseSDE
    schedule : linear
    kT : 1
    translation_inv : False
    type : [GeneralSDE, VP_SDE]
    knots : [0.2]
    friction : 15.0
    data_handler : ${datamodule}

  score:
    _target_: gen.diffusion.score.Score
    correction:
      _target_: gen.diffusion.score.Correction
      data_handler : ${datamodule}
      # from 0 to ${duration}: gradually decrease the force correction;
      # from ${duration} to 1: gradually increase the linear correction
      duration : 0.0
    single_nn : True # if False, use a separate nn for each segment of the SDE. Needed only when the SDE is piecewise
    sde : ${model.sde} 