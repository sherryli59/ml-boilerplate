# @package _global_

# to execute this experiment run:
# python main.py +experiment=lj_new run_name=${RUN_NAME}

defaults:
    - /nn@model.score.nn: schnet.yaml
    - override /datamodule: custom_datamodule.yaml

sample:
  nsamples : 500
  return_prob : False
  return_traj : True
  method : e-m

seed: 42

device: cuda:0

trainer:
  max_epochs: 2

logger:
    mlflow:
      experiment_name: "LJ"

datamodule:
  data_path: ["/mnt/ssd/MCMC/mcmc/lj/lj500/lj540_train_idx.npy","/mnt/ssd/MCMC/mcmc/lj/lj500/lj540_train.npy"]
  test_data_path: ["/mnt/ssd/MCMC/mcmc/lj/lj500/lj540_test_idx.npy","/mnt/ssd/MCMC/mcmc/lj/lj500/lj540_test.npy"]
  distribution:
    _target_: gen.simulations.lj.LJ
    boxlength : 8.7
    cutoff : 5.0
    periodic : False
    sigma : 1.0
    epsilon : 1.0
    shift : True


model:
  _target_: gen.diffusion.diffusion.DiffusionModel
  lr : 3e-4
  shape : [20,3]
  conditional : True

  sde :
    _target_: gen.diffusion.sde.VP_SDE
    schedule : linear
    translation_inv : False
    device : ${device}

  lattice:
    _target_: gen.diffusion.utils.Lattice
    boxlength: ${datamodule.distribution.boxlength}
    n_cells: 3

  score:
    _target_: gen.diffusion.score.Score
    correction:
      _target_: gen.diffusion.score.Correction
      data_handler : ${datamodule}
      # from 0 to ${duration}: gradually decrease the force correction;
      # from ${duration} to 1: gradually increase the linear correction
      duration : 0.1
    sde : ${model.sde} 
    lattice : ${model.lattice}

  